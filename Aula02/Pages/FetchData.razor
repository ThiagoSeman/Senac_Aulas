@page "/listapessoa"
@using Aula02.Data
@using Aula1.Model;

<PageTitle>Lista de Pessoas</PageTitle>

<h1>Lista de Pessoas</h1>

@if (pessoas == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nome</th>
                <th>CPF</th>
                <th>DataNac</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Ipessoa in pessoas)
            {
                <tr>
                    <td>@Ipessoa.id</td>
                    <td>@Ipessoa.nome</td>
                    <td>@Ipessoa.CPF</td>
                    <td>@Ipessoa.DataNac</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    public static List<Pessoa> pessoas { get; set; } = new();
    public Pessoa pessoa = new Pessoa();
    protected override async Task OnInitializedAsync()
    {
        pessoa.id = Guid.NewGuid();
        pessoa.nome = "Gilberto";
        pessoa.DataNac = new DateTime(2023, 7, 31, 08, 20, 20);
        pessoa.CPF = "222.222.222-22";
        pessoa.endereco = new Endereco();
        pessoa.endereco.id = Guid.NewGuid();
        pessoa.endereco.idCliente = pessoa.id;
        pessoa.endereco.logradouro = "Rua Brasil";
        pessoa.endereco.numero = "ao lado do 500";

        if(pessoas.Exists(p => p.nome.Contains(pessoa.nome)))
        {
            if (pessoas.Exists(p => p.CPF.Contains(pessoa.CPF)))
            {
            }
            else
            {
                pessoas.Add(pessoa);
            }
        }
        else
        {
            pessoas.Add(pessoa);
        }

        foreach(var p in pessoas)
        {
            if (p.nome == pessoa.nome)
            { 
            }
            else
            {                
                pessoas.Add(pessoa);
            }
        }         
    }
}
